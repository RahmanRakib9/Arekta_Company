generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["mongoDb"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum DESIGNATION {
  USER
  ADMIN
}

model User {
  id            String       @id @default(auto()) @map("_id") @db.ObjectId
  userName      String?      @unique // should be server generated unique userName in future
  email         String
  password       String
  contactNumber String?
  designation   DESIGNATION?
  isVerified    Boolean?
  // 1 user can have 1 package
  packageId     String       @unique @db.ObjectId
  package       Package?     @relation(fields: [packageId], references: [id])
  // each user can have multiple restaurants
  restaurants   Restaurant[]
}

model Restaurant {
  id                    String @id @default(auto()) @map("_id") @db.ObjectId
  registrationNumber    String? @unique // should be server generated unique userName in future
  name                  String
  officialEmail         String
  officialContactNumber String
  address               String
  city                  String
  district              String
  postCode              String
  tradeLicense          String
  // One user can own multiple restaurants
  ownerId               String @unique @db.ObjectId
  owner                 User   @relation(fields: [ownerId], references: [id])
}

model Category {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String
}

model PRODUCT {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  price       Int
  //  category
  // Restaurant
  isAvailable Boolean
  Image       String
  Description String?
  // options enum
}

enum PACKAGE_TYPE {
  GROWTH
  PRO
  ELITE
}

// first of all we will create a package then we will create facility by referencing the packageId 
model Package {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  price       Int
  packageType PACKAGE_TYPE
  users       User[]
  facilities  Facility[]  @relation("PackageFacilities")
}

model Facility {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  packageId   String    @db.ObjectId
  package     Package   @relation(fields: [packageId], references: [id], name: "PackageFacilities")
}
